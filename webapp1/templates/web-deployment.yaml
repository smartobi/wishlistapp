apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.metadata.name3 }}"

spec:
  replicas: "{{ .Values.replicaCount2 }}"
  selector: 
    matchLabels:
      component: "{{ .Values.image3.name }}"
  template:
    metadata:
      labels:
        component: "{{ .Values.image3.name }}"
    spec:
      containers:
      - name: "{{ .Values.image3.name }}"
        image: "{{ .Values.image3.repository }}:{{ .Values.image3.tag }}"
        ports:
        - containerPort: "{{ .Values.service.port3 }}"
        env:
          - name: REDIS_HOST
            value: "{{ .Values.env.redis.namevalue }}"
          - name: REDIS_PORT
            value: "{{ .Values.env.redis.portvalue }}"
          - name: POSTGRES_HOST
            value: "{{ .Values.service.name2 }}"
          - name: POSTGRES_USER
            value: "{{ .Values.env.postgres.namevalue }}"
          - name: POSTGRES_PORT
            value: "{{ .Values.env.postgres.portvalue }}"
          - name: POSTGRES_DB
            value: "{{ .Values.env.postgres.dbvalue }}"
          - name: PGPASSWORD
            valueFrom:
              secretKeyRef:
               name: "{{ .Values.env.postgres.secret.name }}"
               key: "{{ .Values.env.postgres.secret.key }}"

 
